name: CI

on:
  push:
    branches: "master"
    tags: ["*"]
  pull_request:
  release:

env:
  BINARYBUILDER_FULL_SHARD_TEST: true
  BINARYBUILDER_AUTOMATIC_APPLE: true

jobs:
  test:
    name: Julia ${{ matrix.julia-version }} - x64 - runner ${{ matrix.runner }} - SquashFS ${{ matrix.squashfs }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      BINARYBUILDER_RUNNER: ${{ matrix.runner }}
      BINARYBUILDER_USE_SQUASHFS: ${{ matrix.squashfs }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Add a job that uses the privileged builder with squashfs shards
          - runner: privileged
            squashfs: true
            julia-version: "1.7"

          - runner: privileged
            squashfs: true
            julia-version: "1.8"

          - runner: privileged
            squashfs: true
            julia-version: "nightly"

          # Add a job that uses the unprivileged builder with unpacked shards
          - runner: unprivileged
            squashfs: false
            julia-version: "1.7"

          # Add a job that uses the docker builder with unpacked shards
          - runner: docker
            squashfs: false
            julia-version: "1.7"

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          build-mount-path: /home/runner/.julia
      - run: sudo rm -rf /opt/*
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: x64
      - uses: julia-actions/cache@v1
        # For the time being cache artifacts only for squashfs, we need too much
        # storage for the unpacked shards
        if: ${{ matrix.squashfs == true }}
        with:
          # Reserve entire cache to artifacts
          cache-name: ${{ matrix.squashfs }}
          cache-artifacts: "true"
          cache-packages: "false"
          cache-registries: "false"
      - uses: julia-actions/julia-buildpkg@latest
      - name: System info
        run: julia --project=. --color=yes -e "using BinaryBuilderBase; BinaryBuilderBase.versioninfo()"
      - name: Run tests
        run: |
          eval `ssh-agent`
          chmod 0600 test/id_ecdsa_deploy_helloworld_c_jll_read_only
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add test/id_ecdsa_deploy_helloworld_c_jll_read_only
          julia --check-bounds=yes --color=yes --depwarn=yes --inline=yes --project=@. -e 'using Pkg; Pkg.instantiate(); Pkg.test(coverage=true)'
      - uses: julia-actions/julia-uploadcodecov@v0.1
        continue-on-error: true
      - uses: julia-actions/julia-uploadcoveralls@v0.1
        continue-on-error: true

  Documentation:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      JULIA_PKG_SERVER: ""
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@latest
        with:
          version: "1.7"
      - uses: julia-actions/julia-docdeploy@releases/v1
        env:
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
